= Ideas lab
---

# Formatting algorithm

* Look for possible pairs in the text starting with strict formatting
* Left to right
* Subscript and superscript are strict
* Backslash escape doesn't apply inside ++ and ``
* Combine: eliminate conflicts (e.g. bold inside italic)
* Then loose formatting, left to right
* Combine: eliminate conflicts (e.g. strict bold inside loose bold)
* Are all possible pairs consumed? Result!


# Special parts

Asciidoctor: level 0 (#) is a part. Roman numerals

:key:doctype book

Bibliography
[!bibliography]

Index
[!index]

Glossary

Preface

Appendix
etc.

Not numbered sections, but appendix has its own numbering. Any part that repeats can be numbered

Table of contents?
[!table-of-contents]

Abstract can or can be not a section.
Put the section inside a block so that it is not indexed?
Or apply the attribute to a block?


# Quotes

[quote="Captain James T. Kirk", in="Star Trek IV: The Voyage Home", date=1986, comment=funny.]   
- After landing the cloaked Klingon bird of prey in Golden Gate park:
>
Everybody remember where we parked.

// Enumeration can use > for next line. Here it is used to transition to the body of the quote
// without an empty line.
// It is called enumeration, but - is also meant to be used as quotation dash.

___
- After landing the cloaked Klingon bird of prey in Golden Gate park:

Everybody remember where we parked.

-- Captain James T. Kirk, Star Trek IV: The Voyage Home, 1986, funny.
___


// Not sure about that one
""
I hold it that a little rebellion now and then is a good thing,
and as necessary in the political world as storms in the physical.
""
-- Thomas Jefferson, Papers of Thomas Jefferson: Volume 11

["Thomas Jefferson" 1787]:
> I hold it that a little rebellion now and then is a good thing,
> and as necessary in the political world as storms in the physical.
>
> -- Papers of Thomas Jefferson: Volume 11

// Bottom footer
[verses=two lines from the poem Fog,by=Carl Sandburg]
The fog comes
on little cat feet.

[verses=Fog,by=Carl Sandburg]
___
The fog comes
on little cat feet.

It sits looking
over harbor and city
on silent haunches
and then moves on.
___


// Top title
// Author in footer
= Fog
[verses]
___
The fog comes
on little cat feet.

It sits looking
over harbor and city
on silent haunches
and then moves on.

-- Carl Sandburg
___

// Allow section heading to set title?
[verses]
___
# Fog

The fog comes
on little cat feet.

It sits looking
over harbor and city
on silent haunches
and then moves on.

-- Carl Sandburg
___


// Author under title
= Fog
[verses, by=Carl Sandburg]
___
The fog comes
on little cat feet.

It sits looking
over harbor and city
on silent haunches
and then moves on.
___

= Title
[verses=Comment, by=Author, date=Date]
___
Contents

-- [Author, [Date,]] Footer text
___
// Comment comes last
// Without title -> author, date, footer text and comment in footer
// And without footer text -> replaced by comment in footer
// Use Arcadam formatting in footer text *bold* etc
// First line: Author, date if provided
// Then footer text
// Then comment

# Counters

[!get-counter a] -> a = 1

[!get-next a] -> a = 2

parameter: initial value 99, step +2
can be negative

{a}

{:next a} -> increment and insert in document

Initial value a letter, roman numeral, greek letter, other language...

z -> aa, ab ...
foo -> fop, foq, for...

Prefix to insert before the counter value

[!get-counter a=5]("Chapter ")


# Index

* {+term}
Add to index and output term

* {+word, term, ...}
Add term(s) to index and output word

* {+term1, +term2}
Add both term1 and term2 to index then output term1

* {+,term}
Add term to index without output :-(


# List numbering (ordering?)

[numbering=5]
. Item 5
. Item 6...

[numbering="1, 3-"]
. Unnumbered
. Unnumbered
. Item 3
. Item 4...

[numbering=a]
. Item a
. Item b...

[numbering=08,format=hex]
. Item 08
. Item 09
. Item 0A


# Admonitions

Github uses this syntax:

> [!NOTE]
> Note contents here

Custom control syntax:
[!NOTE]

If it is in indented context, can't use [NOTE] attribute. So would be good to have the option of using custom control.

It may just insert the admonition icon though, might not change the paragraph styling unless you use styling tricks.

* List item
> [!TIP]
> Here is a tip
  * Sublist
  [!WARNING]
  I want to warn you


# Indented commands

Would be nice if more things could work in indented context. We already have:

- List items
- Code blocks
- Enumerations
- Standalone custom controls(?)

Only list items and code blocks are competing for the first indented block.
The other objects must be in indented paragraph context.
How about adding single-line comment to the list?

  * indented list item

  Indented paragraph attached to the list
  // Comment here
  
  // or in first line of paragraph
  
* Non-indented list item
> // Comment here
> continuation of list item

Attributes -> no
Markers -> maybe? not keen
Section heading -> no
Breaks -> maybe? don't think it's needed
Block title?

* A block title comes on the first line
* It starts with "=" and space
* It can be applied to other things than a block: image caption...

Do we want multi-level ">" indents?

> > he says
> 

E.g., a ">"-indented block title on multiple lines - the spec says to use > for the next lines

Also to use [quote] on online forums, instead of nested quote blocks use > >
Can already do one extra layer of nesting with:

["linus"]:
> git
>

Do we want indented ">" indents?

E.g. an indented block title on multiple lines - the spec says to use > for the next lines

Do we want ">"-indented list items?

* Not indented
> continuation of list item
> * Sublist
> > continuation of sublist item
+ 
[form]
====
[checkbox, id=foo]
|+| I agree | consentgiven
====
+
> > thank you
> This belongs to top-level list item
> 

Currently I need a block:

* Not indented
> continuation of list item
+ 
--

* Sublist
> continuation of sublist item
+
[form]
====
[checkbox, id=foo]
|+| I agree | consentgiven
====
+
> thank you

--
+
> This belongs to top-level list item
> 

# Indented marker as attributes replacement

* List item
> continued
> 
> [.with width=200,height=100]:
> [!image Sunset](sunset.jpg)
> 
> this is still part of the first bullet

Still can't do an indented block, but it would work for some stuff.

# Include

It should allow nesting blocks without special gymnastics. E.g.

* List item
  * Sublist item
  [!include consentForm]
  thank you

////
{:begin consentForm}
[form]
====
[checkbox id=foo]
|+| I agree | consentgiven
====
{:end consentForm}
////

# Goals

Should be easy to tell where a code block or content block starts and ends

So that [!include region] has less work to do

Content block masquerading as code block -> can't use \{:begin} \{:end} inside.
Can content block be indented, like code block?

Are \{:begin} and \{:end} allowed to be indented with ">"? Shouldn't be necessary.

Region search: split the file on \{:begin\s+

* If the region name matches and there is only one match then assume we found it
* If there is only one match that "looks like" part of code block assume we found it (ends with }```\s*\n)
* Else parse the file to find the right match -> eliminate all invalid region tags

Other blocks -> don't have same constraints
* Should we allow them to be indented? What about attributes?

Reduce/eliminate use of "+" to join parts

Could use > *N to indent the following block by N levels

* List item
continued
>
[width=200,height=100]
[!image Sunset](sunset.jpg)

To start a paragraph with different level, use > to indicate the level.
Indented or non-indented.
If non-indented use > to set the level of next paragraph

Non-indented = top level

Indented = code block

Indented continuation after > line is part of same regular paragraph

next indented block attaches to it

* Any text can be indented with > for layout reasons
* A spaces-indented line that follows a ">"-indented line is a continuation of it
* The next indented block or paragraph gets attached to it
* Commands and blocks can be indented with spaces (and ">"?)
* An indented code block follows an empty line if the line before was non-indented
* Space-indented lines that follow an indented code block are attached to it
* An empty line with as many > as the item level attaches the following block or paragraph to a list item
* That also works with nested custom markers

Using the dot as nesting sign instead of ">" since nesting and indent can differ + Markdown looks funny with ">".

Indenting indents -> only lines that don't start with spaces

> indent me
  continued

  * list item
  > next line

> end of list, still indented

adding one level:

> indenting
> > indent me
    continued

    * list item
    > next line

> > end of list, still indented

With all the indent signs:

> > indent me
> > continued
> >
> > * list item
> > > next line
> >
> > end of list, still indented

But what if there are nesting signs "."?
Should we allow ">."?